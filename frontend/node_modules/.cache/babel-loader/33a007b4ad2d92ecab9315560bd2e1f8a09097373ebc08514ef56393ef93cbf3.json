{"ast":null,"code":"var _jsxFileName = \"/Users/keegannunes/Documents/react-jobly/frontend/src/navigation/NavBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"reactstrap\";\nimport UserContext from \"../auth/UserContext\";\nimport \"./NavBar.css\";\n\n/** Navigation bar, to appear on every render. \n *  Returns loggedInNav() if user is logged in.\n *  Returns loggedOutNav() if no user is logged in.\n * \n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = ({\n  logout\n}) => {\n  _s();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  console.debug(\"Navigation\", \"currentUser=\", currentUser);\n\n  // NavBar for logged in user\n  // show logout, jobs, companies and profile links\n  function loggedInNavBar() {\n    return /*#__PURE__*/_jsxDEV(Nav, {\n      className: \"page-options\",\n      navbar: true,\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"nav-link\",\n        to: \"/companies\",\n        children: \"Companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"nav-link\",\n        to: \"/jobs\",\n        children: \"Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"nav-link\",\n        to: \"/profile\",\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"nav-link\",\n        to: \"/\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n  // NavBar for unlogged in user\n  // only show login and signup links\n  function loggedOutNavBar() {\n    return /*#__PURE__*/_jsxDEV(Nav, {\n      className: \"page-options\",\n      navbar: true,\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"nav-link\",\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"nav-link\",\n        to: \"/signup\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    expand: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      className: \"company-name\",\n      to: \"/\",\n      children: \"Jobly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), currentUser ? loggedInNavBar() : loggedOutNavBar()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(NavBar, \"3CHVfvdogVMdIKctk02PXQKNcBM=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useContext","NavLink","Link","Navbar","Nav","UserContext","jsxDEV","_jsxDEV","NavBar","logout","_s","currentUser","console","debug","loggedInNavBar","className","navbar","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","loggedOutNavBar","expand","_c","$RefreshReg$"],"sources":["/Users/keegannunes/Documents/react-jobly/frontend/src/navigation/NavBar.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"reactstrap\";\nimport UserContext from \"../auth/UserContext\";\nimport \"./NavBar.css\";\n\n/** Navigation bar, to appear on every render. \n *  Returns loggedInNav() if user is logged in.\n *  Returns loggedOutNav() if no user is logged in.\n * \n*/ \n\nconst NavBar = ({ logout }) => {\n    const { currentUser } = useContext(UserContext);\n    console.debug(\"Navigation\", \"currentUser=\", currentUser);\n\n    // NavBar for logged in user\n    // show logout, jobs, companies and profile links\n    function loggedInNavBar() {\n        return (\n            <Nav className=\"page-options\" navbar>\n                <NavLink className=\"nav-link\" to=\"/companies\">\n                    Companies\n                </NavLink>\n\n                <NavLink className=\"nav-link\" to=\"/jobs\">\n                    Jobs\n                </NavLink>\n\n                <NavLink className=\"nav-link\" to=\"/profile\">\n                    Profile\n                </NavLink>\n\n                <Link className=\"nav-link\" to=\"/\" onClick={logout}>\n                    Logout\n                </Link>\n            </Nav>\n        );\n    }\n    // NavBar for unlogged in user\n    // only show login and signup links\n    function loggedOutNavBar() {\n        return (\n            <Nav className=\"page-options\" navbar>\n                <NavLink className=\"nav-link\" to=\"/login\">\n                    Login\n                </NavLink>\n                <NavLink className=\"nav-link\" to=\"/signup\">\n                    Signup\n                </NavLink>\n            </Nav>\n\n        );\n    }\n    return (\n        <Navbar expand=\"md\">\n            <NavLink className=\"company-name\" to=\"/\">\n                Jobly\n            </NavLink>\n            { currentUser ? loggedInNavBar() : loggedOutNavBar()}\n        </Navbar>\n    );\n}\n\nexport default NavBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}