{"ast":null,"code":"var _jsxFileName = \"/Users/keegannunes/Documents/react-jobly/frontend/src/jobs/JobCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport UserContext from \"../auth/UserContext\";\nimport \"./JobCard.css\";\n\n/** Display a preview of information about a job \n * \n * Props: id, title, salary, equity, companyName.\n * \n * Implemented by JobCardList.\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobCard({\n  key,\n  id,\n  title,\n  salary,\n  equity,\n  companyName\n}) {\n  _s();\n  console.debug(JobCard);\n  const {\n    hasAppliedToJob,\n    applyToJob\n  } = useContext(UserContext);\n  const [applied, setApplied] = useState();\n  useEffect(function applicationStatus() {\n    console.debug(\"JobCard useEffect updateAppliedStatus\", \"id=\", id);\n    setApplied(hasAppliedToJob(id));\n  }, [id, hasAppliedToJob]);\n  async function handleClick(e) {\n    if (hasAppliedToJob(id)) return;\n    applyToJob(id);\n    setApplied(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JobCard card\",\n    children: [\" \", applied, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: companyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), salary && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Salary: $ \", addCommas(salary)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 22\n      }, this), equity !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Equity: \", equity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"apply-btn\",\n        onClick: handleClick,\n        disabled: applied,\n        children: applied ? \"Applied\" : \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n\n  /** Format Salary with dollar sign and appropriate commas. */\n  function addCommas(num) {\n    let numString = num.toString();\n    if (numString[0] === \"-\") {\n      numString = numString.slice(1);\n    }\n    let commaIdx;\n    if (numString.includes(\".\")) {\n      commaIdx = numString.indexOf(\".\");\n    } else {\n      commaIdx = numString.length;\n    }\n    let decimals = numString.slice(commaIdx);\n    let returnString = \"\";\n    for (let i = commaIdx - 1; i >= 0; i--) {\n      returnString = numString[i] + returnString;\n      if ((commaIdx - i) % 3 === 0 && i !== 0) {\n        returnString = \",\" + returnString;\n      }\n    }\n    return (num < 0 ? \"-\" : \"\") + returnString + decimals;\n  }\n}\n_s(JobCard, \"4ONTUlkX5Ua+I75bA1zpPI55/lU=\");\n_c = JobCard;\nexport default JobCard;\n\n// import React from 'react';\n\n// function JobCard({ job }) {\n//   return (\n//     <div className=\"job-card\">\n//       <h2>{job.title}</h2>\n//       <p>Salary: {job.salary ? `$${job.salary.toLocaleString()}` : \"Not provided\"}</p>\n//       <p>Equity: {job.equity ? `${job.equity}` : \"None\"}</p>\n//     </div>\n//   );\n// }\n\n// export default JobCard;\nvar _c;\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"names":["React","useState","useContext","useEffect","UserContext","jsxDEV","_jsxDEV","JobCard","key","id","title","salary","equity","companyName","_s","console","debug","hasAppliedToJob","applyToJob","applied","setApplied","applicationStatus","handleClick","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","addCommas","onClick","disabled","num","numString","toString","slice","commaIdx","includes","indexOf","length","decimals","returnString","i","_c","$RefreshReg$"],"sources":["/Users/keegannunes/Documents/react-jobly/frontend/src/jobs/JobCard.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport UserContext from \"../auth/UserContext\";\nimport \"./JobCard.css\"\n\n/** Display a preview of information about a job \n * \n * Props: id, title, salary, equity, companyName.\n * \n * Implemented by JobCardList.\n*/\n\nfunction JobCard({ key, id, title, salary, equity, companyName }) {\n    console.debug(JobCard);\n\n    const { hasAppliedToJob, applyToJob } = useContext(UserContext);\n    const [ applied, setApplied ] = useState();\n\n    useEffect(function applicationStatus() {\n        console.debug(\"JobCard useEffect updateAppliedStatus\", \"id=\", id);\n\n        setApplied(hasAppliedToJob(id));\n    }, [id, hasAppliedToJob]);\n\n    async function handleClick(e) {\n        if (hasAppliedToJob(id)) return;\n        applyToJob(id);\n        setApplied(true);\n    }\n\n\n    return (\n        <div className=\"JobCard card\"> {applied}\n        <div className=\"card-body\">\n          <h3 className=\"card-title\">{title}</h3>\n          <p>{companyName}</p>\n          {salary && <div><small>Salary: $ {addCommas(salary)}</small></div>}\n          {equity !== null && <div><small>Equity: {equity}</small></div>}\n          <button className=\"apply-btn\"\n                  onClick={handleClick}\n                  disabled={applied}>\n            {applied ? \"Applied\" : \"Apply\"}\n          </button>\n        </div>\n      </div>\n    );\n\n/** Format Salary with dollar sign and appropriate commas. */\n    function addCommas(num) {\n      let numString = num.toString();\n      if (numString[0] === \"-\") {\n          numString = numString.slice(1);\n      }\n  \n      let commaIdx;\n      if (numString.includes(\".\")) {\n          commaIdx = numString.indexOf(\".\")\n      } else {\n          commaIdx = numString.length;\n      }\n  \n      let decimals = numString.slice(commaIdx);\n      let returnString = \"\";\n  \n      for (let i=commaIdx-1; i >= 0; i--) {\n          returnString = numString[i] + returnString;\n          if((commaIdx - i) %3 === 0 && i !==0) {\n              returnString = \",\" + returnString;\n          }\n      }\n      return (num < 0 ? \"-\": \"\") + returnString + decimals;\n  }\n}\n\nexport default JobCard;\n\n\n// import React from 'react';\n\n// function JobCard({ job }) {\n//   return (\n//     <div className=\"job-card\">\n//       <h2>{job.title}</h2>\n//       <p>Salary: {job.salary ? `$${job.salary.toLocaleString()}` : \"Not provided\"}</p>\n//       <p>Equity: {job.equity ? `${job.equity}` : \"None\"}</p>\n//     </div>\n//   );\n// }\n\n// export default JobCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAO,eAAe;;AAEtB;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAOA,SAASC,OAAOA,CAAC;EAAEC,GAAG;EAAEC,EAAE;EAAEC,KAAK;EAAEC,MAAM;EAAEC,MAAM;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC9DC,OAAO,CAACC,KAAK,CAACT,OAAO,CAAC;EAEtB,MAAM;IAAEU,eAAe;IAAEC;EAAW,CAAC,GAAGhB,UAAU,CAACE,WAAW,CAAC;EAC/D,MAAM,CAAEe,OAAO,EAAEC,UAAU,CAAE,GAAGnB,QAAQ,CAAC,CAAC;EAE1CE,SAAS,CAAC,SAASkB,iBAAiBA,CAAA,EAAG;IACnCN,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAE,KAAK,EAAEP,EAAE,CAAC;IAEjEW,UAAU,CAACH,eAAe,CAACR,EAAE,CAAC,CAAC;EACnC,CAAC,EAAE,CAACA,EAAE,EAAEQ,eAAe,CAAC,CAAC;EAEzB,eAAeK,WAAWA,CAACC,CAAC,EAAE;IAC1B,IAAIN,eAAe,CAACR,EAAE,CAAC,EAAE;IACzBS,UAAU,CAACT,EAAE,CAAC;IACdW,UAAU,CAAC,IAAI,CAAC;EACpB;EAGA,oBACId,OAAA;IAAKkB,SAAS,EAAC,cAAc;IAAAC,QAAA,GAAC,GAAC,EAACN,OAAO,eACvCb,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBnB,OAAA;QAAIkB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEf;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvCvB,OAAA;QAAAmB,QAAA,EAAIZ;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnBlB,MAAM,iBAAIL,OAAA;QAAAmB,QAAA,eAAKnB,OAAA;UAAAmB,QAAA,GAAO,YAAU,EAACK,SAAS,CAACnB,MAAM,CAAC;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACjEjB,MAAM,KAAK,IAAI,iBAAIN,OAAA;QAAAmB,QAAA,eAAKnB,OAAA;UAAAmB,QAAA,GAAO,UAAQ,EAACb,MAAM;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9DvB,OAAA;QAAQkB,SAAS,EAAC,WAAW;QACrBO,OAAO,EAAET,WAAY;QACrBU,QAAQ,EAAEb,OAAQ;QAAAM,QAAA,EACvBN,OAAO,GAAG,SAAS,GAAG;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;;EAGZ;EACI,SAASC,SAASA,CAACG,GAAG,EAAE;IACtB,IAAIC,SAAS,GAAGD,GAAG,CAACE,QAAQ,CAAC,CAAC;IAC9B,IAAID,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACtBA,SAAS,GAAGA,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC;IAClC;IAEA,IAAIC,QAAQ;IACZ,IAAIH,SAAS,CAACI,QAAQ,CAAC,GAAG,CAAC,EAAE;MACzBD,QAAQ,GAAGH,SAAS,CAACK,OAAO,CAAC,GAAG,CAAC;IACrC,CAAC,MAAM;MACHF,QAAQ,GAAGH,SAAS,CAACM,MAAM;IAC/B;IAEA,IAAIC,QAAQ,GAAGP,SAAS,CAACE,KAAK,CAACC,QAAQ,CAAC;IACxC,IAAIK,YAAY,GAAG,EAAE;IAErB,KAAK,IAAIC,CAAC,GAACN,QAAQ,GAAC,CAAC,EAAEM,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAChCD,YAAY,GAAGR,SAAS,CAACS,CAAC,CAAC,GAAGD,YAAY;MAC1C,IAAG,CAACL,QAAQ,GAAGM,CAAC,IAAG,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAI,CAAC,EAAE;QAClCD,YAAY,GAAG,GAAG,GAAGA,YAAY;MACrC;IACJ;IACA,OAAO,CAACT,GAAG,GAAG,CAAC,GAAG,GAAG,GAAE,EAAE,IAAIS,YAAY,GAAGD,QAAQ;EACxD;AACF;AAAC3B,EAAA,CA5DQP,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AA8DhB,eAAeA,OAAO;;AAGtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}