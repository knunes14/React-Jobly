{"ast":null,"code":"var _jsxFileName = \"/Users/keegannunes/Documents/react-jobly/frontend/src/companies/CompanyDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JoblyApi from \"../api/api\";\nimport LoadingPage from \"../common/LoadingPage\";\nimport JobCardList from \"../jobs/JobCardList\";\n\n/** Display details about one company. \n *  \n * Routed at: /companies/:handle\n * \n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyDetail = () => {\n  _s();\n  console.debug(\"Company Detail\");\n  const {\n    handle\n  } = useParams();\n  console.log(\"the handle is:\", handle); // working\n\n  const [company, setCompany] = useState(null);\n\n  // use effect to call the function on page load\n  useEffect(function getCompanyOnMount() {\n    console.debug(\"getCompanyOnMount, getCompanyInfo\");\n    getCompanyInfo();\n  }, [handle]);\n\n  // function to make api call to get company info\n  async function getCompanyInfo() {\n    let companyInfo = await JoblyApi.getCompany(handle);\n    setCompany(companyInfo);\n  }\n  if (!company) return /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CompanyDetail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: company.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: company.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(JobCardList, {\n      jobs: company.jobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(CompanyDetail, \"iXW0sHYhmtaDyknNWiCsI22xi70=\", false, function () {\n  return [useParams];\n});\n_c = CompanyDetail;\nexport default CompanyDetail;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","JoblyApi","LoadingPage","JobCardList","jsxDEV","_jsxDEV","CompanyDetail","_s","console","debug","handle","log","company","setCompany","getCompanyOnMount","getCompanyInfo","companyInfo","getCompany","fileName","_jsxFileName","lineNumber","columnNumber","className","children","name","description","jobs","_c","$RefreshReg$"],"sources":["/Users/keegannunes/Documents/react-jobly/frontend/src/companies/CompanyDetail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport JoblyApi from \"../api/api\";\nimport LoadingPage from \"../common/LoadingPage\";\nimport JobCardList from \"../jobs/JobCardList\";\n\n/** Display details about one company. \n *  \n * Routed at: /companies/:handle\n * \n*/\n\n\nconst CompanyDetail = () => {\n    console.debug(\"Company Detail\");\n    const { handle } = useParams();\n    console.log(\"the handle is:\", handle); // working\n\n    const [company, setCompany] = useState(null);\n\n    // use effect to call the function on page load\n    useEffect(function getCompanyOnMount() {\n        console.debug(\"getCompanyOnMount, getCompanyInfo\")\n        getCompanyInfo();\n\n    }, [handle]);\n\n    // function to make api call to get company info\n    async function getCompanyInfo() {\n        let companyInfo = await JoblyApi.getCompany(handle);\n        setCompany(companyInfo);\n    }\n    \n\n    if (!company) return <LoadingPage />\n\n    return (\n        <div className=\"CompanyDetail\"> \n            <h1>{company.name}</h1>\n            <p>{company.description}</p>\n            <JobCardList jobs={company.jobs} />\n        </div>\n    )\n}\n\nexport default CompanyDetail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,WAAW,MAAM,qBAAqB;;AAE7C;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxBC,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;EAC/B,MAAM;IAAEC;EAAO,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC9BQ,OAAO,CAACG,GAAG,CAAC,gBAAgB,EAAED,MAAM,CAAC,CAAC,CAAC;;EAEvC,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAD,SAAS,CAAC,SAASgB,iBAAiBA,CAAA,EAAG;IACnCN,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAC;IAClDM,cAAc,CAAC,CAAC;EAEpB,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;;EAEZ;EACA,eAAeK,cAAcA,CAAA,EAAG;IAC5B,IAAIC,WAAW,GAAG,MAAMf,QAAQ,CAACgB,UAAU,CAACP,MAAM,CAAC;IACnDG,UAAU,CAACG,WAAW,CAAC;EAC3B;EAGA,IAAI,CAACJ,OAAO,EAAE,oBAAOP,OAAA,CAACH,WAAW;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEpC,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BlB,OAAA;MAAAkB,QAAA,EAAKX,OAAO,CAACY;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBhB,OAAA;MAAAkB,QAAA,EAAIX,OAAO,CAACa;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BhB,OAAA,CAACF,WAAW;MAACuB,IAAI,EAAEd,OAAO,CAACc;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd,CAAC;AAAAd,EAAA,CA9BKD,aAAa;EAAA,QAEIN,SAAS;AAAA;AAAA2B,EAAA,GAF1BrB,aAAa;AAgCnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}