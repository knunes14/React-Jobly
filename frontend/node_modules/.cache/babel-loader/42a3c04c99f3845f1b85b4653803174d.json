{"ast":null,"code":"import _toConsumableArray from \"/Users/keegannunes/Documents/react-jobly/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/keegannunes/Documents/react-jobly/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/keegannunes/Documents/react-jobly/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/keegannunes/Documents/react-jobly/frontend/src/App.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport NavBar from \"./navigation/NavBar\";\nimport JoblyApi from \"./api/api\";\nimport Paths from \"./routes-nav/Paths\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { jwtDecode } from \"jwt-decode\";\nimport UserContext from \"./auth/UserContext\";\nimport LoadingSpinner from \"./common/LoadingSpinner\";\n\n// Key name for storing token in localStorage for \"remember me\" re-login\nexport var TOKEN_STORAGE_ID = \"jobly-token\";\n\n/** Jobly application.\n *\n * - infoLoaded: has user data been pulled from API?\n *   (this manages spinner for \"loading...\")\n *\n * - currentUser: user obj from API. This becomes the canonical way to tell\n *   if someone is logged in. This is passed around via context throughout app.\n *\n * - token: for logged in users, this is their authentication JWT.\n *   Is required to be set for most API calls. This is initially read from\n *   localStorage and synced to there via the useLocalStorage hook..\n *\n * App -> Routes\n */\n\nfunction App() {\n  var _useLocalStorage = useLocalStorage(TOKEN_STORAGE_ID),\n    _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n    token = _useLocalStorage2[0],\n    setToken = _useLocalStorage2[1];\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    infoLoaded = _useState4[0],\n    setInfoLoaded = _useState4[1];\n  var _useState5 = useState(new Set([])),\n    _useState6 = _slicedToArray(_useState5, 2),\n    applicationIds = _useState6[0],\n    setApplicationIds = _useState6[1];\n  console.debug(\"App\", \"infoLoaded=\", infoLoaded, \"currentUser=\", currentUser, \"token=\", token);\n\n  // Load user info from API. Until a user is logged in and they have a token,\n  // this should not run. It only needs to re-run when a user logs out, so\n  // the value of the token is a dependency for this effect.\n\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n    function getCurrentUser() {\n      return _getCurrentUser.apply(this, arguments);\n    } // set infoLoaded to false while async getCurrentUser runs; once the\n    // data is fetched (or even if an error happens!), this will be set back\n    // to false to control the spinner.\n    function _getCurrentUser() {\n      _getCurrentUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _jwtDecode, username, _currentUser;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!token) {\n                _context.next = 14;\n                break;\n              }\n              _context.prev = 1;\n              _jwtDecode = jwtDecode(token), username = _jwtDecode.username; // put the token on the API class to be used when you call the API\n              JoblyApi.token = token;\n              _context.next = 6;\n              return JoblyApi.getCurrentUser(username);\n            case 6:\n              _currentUser = _context.sent;\n              setCurrentUser(_currentUser);\n              //setApplicationIds(new Set(currentUser.applications));\n              _context.next = 14;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(\"App loadUserInfo: problem loading\", _context.t0);\n              setCurrentUser(null);\n            case 14:\n              setInfoLoaded(true);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 10]]);\n      }));\n      return _getCurrentUser.apply(this, arguments);\n    }\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n  /** Handles signup for app.\n   * Automatic login, when signup form is submitted.\n   */\n  function signup(_x) {\n    return _signup.apply(this, arguments);\n  }\n  /** Handles login. */\n  function _signup() {\n    _signup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(signupData) {\n      var _token;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return JoblyApi.signup(signupData);\n          case 3:\n            _token = _context2.sent;\n            // must add this to JoblyApi!!!!\n            setToken(_token);\n            return _context2.abrupt(\"return\", {\n              success: true\n            });\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(\"signup failed\", _context2.t0);\n            return _context2.abrupt(\"return\", {\n              success: false,\n              errs: _context2.t0\n            });\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n    return _signup.apply(this, arguments);\n  }\n  function login(_x2) {\n    return _login.apply(this, arguments);\n  }\n  /** Handles sitewide logout.*/\n  function _login() {\n    _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data) {\n      var _token2;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return JoblyApi.login(data);\n          case 3:\n            _token2 = _context3.sent;\n            setToken(_token2);\n            return _context3.abrupt(\"return\", {\n              success: true\n            });\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(\"login failed\", _context3.t0);\n            return _context3.abrupt(\"return\", {\n              success: false,\n              errs: _context3.t0\n            });\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n    return _login.apply(this, arguments);\n  }\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  /** checks to see if a job has been applied to */\n  function hasAppliedToJob(id) {\n    return applicationIds.has(id);\n  }\n\n  /** API Call to apply for a job, also updates set of application ids. */\n  function applyToJob(id) {\n    if (hasAppliedToJob(id)) return;\n    JoblyApi.applyToJob(currentUser.username, id);\n    setApplicationIds(new Set([].concat(_toConsumableArray(applicationIds), [id])));\n  }\n  if (!infoLoaded) return /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  });\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      currentUser: currentUser,\n      setCurrentUser: setCurrentUser,\n      hasAppliedToJob: hasAppliedToJob,\n      applyToJob: applyToJob\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    logout: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paths, {\n    login: login,\n    signup: signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }))));\n}\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import useLocalStorage from './hooks/useLocalStorage';\n// import JoblyApi from './api/api';\n// import jwt_decode from 'jwt-decode';\n// import Navigation from './routes-nav/Navigation';\n// import Homepage from './homepage/Homepage';\n// import LoginForm from './auth/LoginForm';\n// import SignupForm from './auth/SignupForm';\n// import CompanyList from './companies/CompanyList';\n// import JobList from './jobs/JobList';\n// import PrivateRoute from './routes-nav/PrivateRoute';\n// import ProfileForm from './profiles/ProfileForm';\n// import UserContext from './auth/UserContext';\n// import axios from 'axios';\n\n// function App() {\n//   const [token, setToken] = useLocalStorage(\"jobly-token\");\n//   const [currentUser, setCurrentUser] = useState(null);\n\n//   useEffect(() => {\n//     const BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3001';\n//     axios.get(`${BASE_URL}/test`)\n//       .then(response => {\n//         console.log(\"Test API Response:\", response);\n\n//         if (token) {\n//           JoblyApi.setToken(token);\n//           const { username } = jwt_decode(token);\n//           async function fetchUser() {\n//             const user = await JoblyApi.getUser(username);\n//             setCurrentUser(user);\n//           }\n//           fetchUser();\n//         } else {\n//           setCurrentUser(null);\n//         }\n\n//       })\n//       .catch(error => console.error(\"Test API Error:\", error));\n\n//   }, [token]);  // This runs whenever 'token' changes\n\n//   // useEffect(() => {\n//   //   if (token) {\n//   //     JoblyApi.setToken(token);\n//   //     const { username } = jwt_decode(token);\n//   //     async function fetchUser() {\n//   //       const user = await JoblyApi.getUser(username);\n//   //       setCurrentUser(user);\n//   //     }\n//   //     fetchUser();\n//   //   } else {\n//   //     setCurrentUser(null);\n//   //   }\n//   // }, [token]);\n\n//   const login = async (loginData) => {\n//     const token = await JoblyApi.login(loginData);\n//     setToken(token);\n//     localStorage.setItem(\"jobly-token\", token);\n//   };\n\n//   const logout = () => {\n//     setToken(null);\n//     localStorage.removeItem(\"jobly-token\");\n//   };\n\n//   const signup = async (signupData) => {\n//     try {\n//       const token = await JoblyApi.signup(signupData);\n//       setToken(token);\n//       localStorage.setItem(\"jobly-token\", token);\n//       return { success: true };  // Indicate success\n//     } catch (errors) {\n//       console.error(\"Signup failed:\", errors);\n//       return { success: false, errors };  // Return errors for display\n//     }\n//   };\n\n//   // const signup = async (signupData) => {\n//   //   try {\n//   //     const token = await JoblyApi.signup(signupData);\n//   //     setToken(token);\n//   //     localStorage.setItem(\"jobly-token\", token);\n//   //     // Redirect or further success actions\n//   //   } catch (errors) {\n//   //     // Handle errors e.g., setting error messages in state to show in the UI\n//   //     console.error(\"Signup failed:\", errors);\n//   //   }\n//   // };\n\n//   // const signup = async (signupData) => {\n//   //   const token = await JoblyApi.register(signupData);\n//   //   setToken(token);\n//   //   localStorage.setItem(\"jobly-token\", token);\n//   // };\n\n//   return (\n//     <Router>\n//       <UserContext.Provider value={{ currentUser, setCurrentUser }}>\n//         <Navigation logout={logout} />\n//         <Routes>\n//           <Route path=\"/\" element={<Homepage />} />\n//           <Route path=\"/login\" element={<LoginForm login={login} />} />\n//           <Route path=\"/signup\" element={<SignupForm signup={signup} />} />\n//           <Route path=\"/companies\" element={<PrivateRoute><CompanyList /></PrivateRoute>} />\n//           <Route path=\"/jobs\" element={<PrivateRoute><JobList /></PrivateRoute>} />\n//           <Route path=\"/profile\" element={<PrivateRoute><ProfileForm /></PrivateRoute>} />\n//         </Routes>\n//       </UserContext.Provider>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// // import React, { useState, useEffect } from 'react';\n// // import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// // import useLocalStorage from './hooks/useLocalStorage';\n// // import JoblyApi from './api/api';\n// // import { default as jwt_decode } from 'jwt-decode';\n\n// // // import jwt_decode from 'jwt-decode';\n// // import Navigation from './routes-nav/Navigation';  // Correct import based on folder structure\n// // import Homepage from './homepage/Homepage';\n// // import LoginForm from './auth/LoginForm';\n// // import SignupForm from './auth/SignupForm';\n// // import CompanyList from './companies/CompanyList';\n// // import JobList from './jobs/JobList';\n// // import PrivateRoute from './routes-nav/PrivateRoute';\n// // import ProfileForm from './profiles/ProfileForm'; // Adjust path as necessary\n// // import UserContext from './auth/UserContext';\n\n// // function App() {\n// //   const [token, setToken] = useLocalStorage(\"jobly-token\");\n// //   const [currentUser, setCurrentUser] = useState(null);\n\n// //   useEffect(() => {\n// //     if (token) {\n// //       JoblyApi.setToken(token);\n// //       const { username } = jwt_decode(token);\n// //       async function fetchUser() {\n// //         const user = await JoblyApi.getUser(username);\n// //         setCurrentUser(user);\n// //       }\n// //       fetchUser();\n// //     } else {\n// //       setCurrentUser(null);\n// //     }\n// //   }, [token]);\n\n// //   const login = async (loginData) => {\n// //     const token = await JoblyApi.login(loginData);\n// //     setToken(token);\n// //     localStorage.setItem(\"jobly-token\", token);\n// //   };\n\n// //   const logout = () => {\n// //     setToken(null);\n// //     localStorage.removeItem(\"jobly-token\");\n// //   };\n\n// //   const signup = async (signupData) => {\n// //     const token = await JoblyApi.register(signupData);\n// //     setToken(token);\n// //     localStorage.setItem(\"jobly-token\", token);\n// //   };\n\n// //   return (\n// //     <Router>\n// //       <UserContext.Provider value={{ currentUser, setCurrentUser }}>\n// //         <Navigation logout={logout} />\n// //         <Switch>\n// //           <Route exact path=\"/\" component={Homepage} />\n// //           <Route exact path=\"/login\" render={(props) => <LoginForm login={login} {...props} />} />\n// //           <Route exact path=\"/signup\" render={(props) => <SignupForm signup={signup} {...props} />} />\n// //           <PrivateRoute exact path=\"/companies\" component={CompanyList} />\n// //           <PrivateRoute exact path=\"/jobs\" component={JobList} />\n// //           <PrivateRoute path=\"/profile\" component={ProfileForm} />\n// //           {/* Include other protected routes as needed */}\n// //         </Switch>\n// //       </UserContext.Provider>\n// //     </Router>\n// //   );\n// // }\n\n// // export default App;\n\n// // import React, { useState, useEffect } from 'react';\n// // import { BrowserRouter as Router } from 'react-router-dom';\n// // import JoblyApi from './JoblyApi';\n// // import jwt_decode from 'jwt-decode';\n// // import Navigation from './routes-nav/Navigation';  // Correct import based on folder structure\n// // import Home from './Home';\n// // import LoginForm from './LoginForm';\n// // import SignupForm from './SignupForm';\n// // import UserContext from './UserContext';\n\n// // function App() {\n// //   const [token, setToken] = useState(localStorage.getItem(\"jobly-token\"));\n// //   const [currentUser, setCurrentUser] = useState(null);\n\n// //   useEffect(() => {\n// //     async function getCurrentUser() {\n// //       if (token) {\n// //         JoblyApi.setToken(token);\n// //         const { username } = jwt_decode(token);\n// //         const user = await JoblyApi.getUser(username);\n// //         setCurrentUser(user);\n// //       }\n// //     }\n// //     getCurrentUser();\n// //   }, [token]);\n\n// //   const login = async (loginData) => {\n// //     const token = await JoblyApi.login(loginData);\n// //     setToken(token);\n// //     localStorage.setItem(\"jobly-token\", token);\n// //   };\n\n// //   const logout = () => {\n// //     setToken(null);\n// //     setCurrentUser(null);\n// //     localStorage.removeItem(\"jobly-token\");\n// //   };\n\n// //   const signup = async (signupData) => {\n// //     const token = await JoblyApi.register(signupData);\n// //     setToken(token);\n// //     localStorage.setItem(\"jobly-token\", token);\n// //   };\n\n// //   return (\n// //     <Router>\n// //       {/* Navigation and Routes go here */}\n// //     </Router>\n// //   );\n// // }\n\n// // export default App;","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","React","useEffect","useState","BrowserRouter","NavBar","JoblyApi","Paths","useLocalStorage","jwtDecode","UserContext","LoadingSpinner","TOKEN_STORAGE_ID","App","_useLocalStorage","_useLocalStorage2","_slicedToArray","token","setToken","_useState","_useState2","currentUser","setCurrentUser","_useState3","_useState4","infoLoaded","setInfoLoaded","_useState5","Set","_useState6","applicationIds","setApplicationIds","console","debug","loadUserInfo","getCurrentUser","_getCurrentUser","apply","arguments","_asyncToGenerator","_callee","_jwtDecode","username","_currentUser","_callee$","_context","t0","error","signup","_x","_signup","_callee2","signupData","_token","_callee2$","_context2","success","errs","login","_x2","_login","_callee3","data","_token2","_callee3$","_context3","logout","hasAppliedToJob","id","has","applyToJob","concat","_toConsumableArray","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Provider","className"],"sources":["/Users/keegannunes/Documents/react-jobly/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport NavBar from \"./navigation/NavBar\";\nimport JoblyApi from \"./api/api\";\nimport Paths from \"./routes-nav/Paths\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { jwtDecode } from \"jwt-decode\";\nimport UserContext from \"./auth/UserContext\";\nimport LoadingSpinner from \"./common/LoadingSpinner\";\n\n// Key name for storing token in localStorage for \"remember me\" re-login\nexport const TOKEN_STORAGE_ID = \"jobly-token\";\n\n/** Jobly application.\n *\n * - infoLoaded: has user data been pulled from API?\n *   (this manages spinner for \"loading...\")\n *\n * - currentUser: user obj from API. This becomes the canonical way to tell\n *   if someone is logged in. This is passed around via context throughout app.\n *\n * - token: for logged in users, this is their authentication JWT.\n *   Is required to be set for most API calls. This is initially read from\n *   localStorage and synced to there via the useLocalStorage hook..\n *\n * App -> Routes\n */\n\nfunction App() {\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [applicationIds, setApplicationIds] = useState(new Set([]));\n\n  console.debug(\"App\", \"infoLoaded=\", infoLoaded, \"currentUser=\", currentUser, \"token=\", token);\n\n  // Load user info from API. Until a user is logged in and they have a token,\n  // this should not run. It only needs to re-run when a user logs out, so\n  // the value of the token is a dependency for this effect.\n\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwtDecode(token);\n          // put the token on the API class to be used when you call the API\n          JoblyApi.token = token;\n          let currentUser = await JoblyApi.getCurrentUser(username); \n          setCurrentUser(currentUser);\n          //setApplicationIds(new Set(currentUser.applications));\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n    // set infoLoaded to false while async getCurrentUser runs; once the\n    // data is fetched (or even if an error happens!), this will be set back\n    // to false to control the spinner.\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n/** Handles signup for app.\n * Automatic login, when signup form is submitted.\n */\nasync function signup(signupData) {\n  try {\n    let token = await JoblyApi.signup(signupData); // must add this to JoblyApi!!!!\n    setToken(token);\n    return { success: true };\n  } catch (errs) {\n    console.error(\"signup failed\", errs);\n    return { success: false, errs };\n  }\n}\n\n/** Handles login. */\nasync function login(data) {\n  try {\n    let token = await JoblyApi.login(data);\n    setToken(token);\n    return { success: true };\n  } catch (errs) {\n    console.error(\"login failed\", errs);\n    return {success: false, errs}\n  }\n}\n\n/** Handles sitewide logout.*/\nfunction logout() {\n  setCurrentUser(null);\n  setToken(null);\n}\n\n/** checks to see if a job has been applied to */\nfunction hasAppliedToJob(id) {\n  return applicationIds.has(id);\n}\n\n/** API Call to apply for a job, also updates set of application ids. */\nfunction applyToJob(id) {\n  if (hasAppliedToJob(id)) return;\n  JoblyApi.applyToJob(currentUser.username, id);\n  setApplicationIds(new Set([...applicationIds, id]));\n}\n\nif (!infoLoaded) return <LoadingSpinner />\n\n  return (\n      <BrowserRouter>\n        <UserContext.Provider value={{ currentUser, setCurrentUser, hasAppliedToJob, applyToJob }}>\n          <div className=\"App\">\n            <NavBar logout={logout}/>\n            <Paths login={login} signup={signup} />\n          </div>\n        </UserContext.Provider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import useLocalStorage from './hooks/useLocalStorage';\n// import JoblyApi from './api/api';\n// import jwt_decode from 'jwt-decode';\n// import Navigation from './routes-nav/Navigation';\n// import Homepage from './homepage/Homepage';\n// import LoginForm from './auth/LoginForm';\n// import SignupForm from './auth/SignupForm';\n// import CompanyList from './companies/CompanyList';\n// import JobList from './jobs/JobList';\n// import PrivateRoute from './routes-nav/PrivateRoute';\n// import ProfileForm from './profiles/ProfileForm';\n// import UserContext from './auth/UserContext';\n// import axios from 'axios';\n\n// function App() {\n//   const [token, setToken] = useLocalStorage(\"jobly-token\");\n//   const [currentUser, setCurrentUser] = useState(null);\n\n//   useEffect(() => {\n//     const BASE_URL = process.env.REACT_APP_BASE_URL || 'http://localhost:3001';\n//     axios.get(`${BASE_URL}/test`)\n//       .then(response => {\n//         console.log(\"Test API Response:\", response);\n  \n//         if (token) {\n//           JoblyApi.setToken(token);\n//           const { username } = jwt_decode(token);\n//           async function fetchUser() {\n//             const user = await JoblyApi.getUser(username);\n//             setCurrentUser(user);\n//           }\n//           fetchUser();\n//         } else {\n//           setCurrentUser(null);\n//         }\n  \n//       })\n//       .catch(error => console.error(\"Test API Error:\", error));\n  \n//   }, [token]);  // This runs whenever 'token' changes\n  \n\n//   // useEffect(() => {\n//   //   if (token) {\n//   //     JoblyApi.setToken(token);\n//   //     const { username } = jwt_decode(token);\n//   //     async function fetchUser() {\n//   //       const user = await JoblyApi.getUser(username);\n//   //       setCurrentUser(user);\n//   //     }\n//   //     fetchUser();\n//   //   } else {\n//   //     setCurrentUser(null);\n//   //   }\n//   // }, [token]);\n\n//   const login = async (loginData) => {\n//     const token = await JoblyApi.login(loginData);\n//     setToken(token);\n//     localStorage.setItem(\"jobly-token\", token);\n//   };\n\n//   const logout = () => {\n//     setToken(null);\n//     localStorage.removeItem(\"jobly-token\");\n//   };\n\n//   const signup = async (signupData) => {\n//     try {\n//       const token = await JoblyApi.signup(signupData);\n//       setToken(token);\n//       localStorage.setItem(\"jobly-token\", token);\n//       return { success: true };  // Indicate success\n//     } catch (errors) {\n//       console.error(\"Signup failed:\", errors);\n//       return { success: false, errors };  // Return errors for display\n//     }\n//   };\n  \n//   // const signup = async (signupData) => {\n//   //   try {\n//   //     const token = await JoblyApi.signup(signupData);\n//   //     setToken(token);\n//   //     localStorage.setItem(\"jobly-token\", token);\n//   //     // Redirect or further success actions\n//   //   } catch (errors) {\n//   //     // Handle errors e.g., setting error messages in state to show in the UI\n//   //     console.error(\"Signup failed:\", errors);\n//   //   }\n//   // };\n  \n//   // const signup = async (signupData) => {\n//   //   const token = await JoblyApi.register(signupData);\n//   //   setToken(token);\n//   //   localStorage.setItem(\"jobly-token\", token);\n//   // };\n\n//   return (\n//     <Router>\n//       <UserContext.Provider value={{ currentUser, setCurrentUser }}>\n//         <Navigation logout={logout} />\n//         <Routes>\n//           <Route path=\"/\" element={<Homepage />} />\n//           <Route path=\"/login\" element={<LoginForm login={login} />} />\n//           <Route path=\"/signup\" element={<SignupForm signup={signup} />} />\n//           <Route path=\"/companies\" element={<PrivateRoute><CompanyList /></PrivateRoute>} />\n//           <Route path=\"/jobs\" element={<PrivateRoute><JobList /></PrivateRoute>} />\n//           <Route path=\"/profile\" element={<PrivateRoute><ProfileForm /></PrivateRoute>} />\n//         </Routes>\n//       </UserContext.Provider>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// // import React, { useState, useEffect } from 'react';\n// // import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// // import useLocalStorage from './hooks/useLocalStorage';\n// // import JoblyApi from './api/api';\n// // import { default as jwt_decode } from 'jwt-decode';\n\n// // // import jwt_decode from 'jwt-decode';\n// // import Navigation from './routes-nav/Navigation';  // Correct import based on folder structure\n// // import Homepage from './homepage/Homepage';\n// // import LoginForm from './auth/LoginForm';\n// // import SignupForm from './auth/SignupForm';\n// // import CompanyList from './companies/CompanyList';\n// // import JobList from './jobs/JobList';\n// // import PrivateRoute from './routes-nav/PrivateRoute';\n// // import ProfileForm from './profiles/ProfileForm'; // Adjust path as necessary\n// // import UserContext from './auth/UserContext';\n\n// // function App() {\n// //   const [token, setToken] = useLocalStorage(\"jobly-token\");\n// //   const [currentUser, setCurrentUser] = useState(null);\n\n// //   useEffect(() => {\n// //     if (token) {\n// //       JoblyApi.setToken(token);\n// //       const { username } = jwt_decode(token);\n// //       async function fetchUser() {\n// //         const user = await JoblyApi.getUser(username);\n// //         setCurrentUser(user);\n// //       }\n// //       fetchUser();\n// //     } else {\n// //       setCurrentUser(null);\n// //     }\n// //   }, [token]);\n\n// //   const login = async (loginData) => {\n// //     const token = await JoblyApi.login(loginData);\n// //     setToken(token);\n// //     localStorage.setItem(\"jobly-token\", token);\n// //   };\n\n// //   const logout = () => {\n// //     setToken(null);\n// //     localStorage.removeItem(\"jobly-token\");\n// //   };\n\n// //   const signup = async (signupData) => {\n// //     const token = await JoblyApi.register(signupData);\n// //     setToken(token);\n// //     localStorage.setItem(\"jobly-token\", token);\n// //   };\n\n// //   return (\n// //     <Router>\n// //       <UserContext.Provider value={{ currentUser, setCurrentUser }}>\n// //         <Navigation logout={logout} />\n// //         <Switch>\n// //           <Route exact path=\"/\" component={Homepage} />\n// //           <Route exact path=\"/login\" render={(props) => <LoginForm login={login} {...props} />} />\n// //           <Route exact path=\"/signup\" render={(props) => <SignupForm signup={signup} {...props} />} />\n// //           <PrivateRoute exact path=\"/companies\" component={CompanyList} />\n// //           <PrivateRoute exact path=\"/jobs\" component={JobList} />\n// //           <PrivateRoute path=\"/profile\" component={ProfileForm} />\n// //           {/* Include other protected routes as needed */}\n// //         </Switch>\n// //       </UserContext.Provider>\n// //     </Router>\n// //   );\n// // }\n\n// // export default App;\n\n\n// // import React, { useState, useEffect } from 'react';\n// // import { BrowserRouter as Router } from 'react-router-dom';\n// // import JoblyApi from './JoblyApi';\n// // import jwt_decode from 'jwt-decode';\n// // import Navigation from './routes-nav/Navigation';  // Correct import based on folder structure\n// // import Home from './Home';\n// // import LoginForm from './LoginForm';\n// // import SignupForm from './SignupForm';\n// // import UserContext from './UserContext';\n\n// // function App() {\n// //   const [token, setToken] = useState(localStorage.getItem(\"jobly-token\"));\n// //   const [currentUser, setCurrentUser] = useState(null);\n\n// //   useEffect(() => {\n// //     async function getCurrentUser() {\n// //       if (token) {\n// //         JoblyApi.setToken(token);\n// //         const { username } = jwt_decode(token);\n// //         const user = await JoblyApi.getUser(username);\n// //         setCurrentUser(user);\n// //       }\n// //     }\n// //     getCurrentUser();\n// //   }, [token]);\n\n// //   const login = async (loginData) => {\n// //     const token = await JoblyApi.login(loginData);\n// //     setToken(token);\n// //     localStorage.setItem(\"jobly-token\", token);\n// //   };\n\n// //   const logout = () => {\n// //     setToken(null);\n// //     setCurrentUser(null);\n// //     localStorage.removeItem(\"jobly-token\");\n// //   };\n\n// //   const signup = async (signupData) => {\n// //     const token = await JoblyApi.register(signupData);\n// //     setToken(token);\n// //     localStorage.setItem(\"jobly-token\", token);\n// //   };\n\n// //   return (\n// //     <Router>\n// //       {/* Navigation and Routes go here */}\n// //     </Router>\n// //   );\n// // }\n\n// // export default App;\n\n"],"mappings":"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AAM;IAAC6D,MAAM,EAAEA,MAAO;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eACzB9E,KAAA,CAAAwE,aAAA,CAAClE,KAAK;IAACmD,KAAK,EAAEA,KAAM;IAACV,MAAM,EAAEA,MAAO;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACnC,CACe,CACT,CAAC;AAEtB;AAEA,eAAelE,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}